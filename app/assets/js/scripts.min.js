/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2019. MIT licensed.
 */
function positionButton(t,o){xPos.innerHTML="X: "+t,yPos.innerHTML="Y: "+o;var n=window.innerWidth,i=window.innerHeight,e=button.offsetTop,r=button.offsetLeft+button.offsetWidth,u=button.offsetTop+button.offsetHeight,f=button.offsetLeft,s=button.offsetLeft+button.offsetWidth/2,b=button.offsetTop+button.offsetHeight/2,m=0,d=0;console.log(s,b),(t>f-proximity||t<r+proximity)&&(o<e-proximity||o<u+proximity)&&(t+margin>f&&t<s&&(m=t-(n/2-buttonWidth/2)+margin),t-margin<r&&t>s&&(m=t-(n/2+buttonWidth/2)-margin),o+margin>e&&o<b&&(d=o-(i/2-buttonWidth/2)+margin),o-margin<u&&o>b&&(d=o-(i/2+buttonWidth/2)-margin));var a=m,g=d;button.style.transform="translate("+a+"px, "+g+"px)"}var margin=50,proximity=75,button=document.querySelector(".button"),buttonWidth=button.offsetWidth,buttonHeight=button.offsetHeight,xPos=document.querySelector("#xpos"),yPos=document.querySelector("#ypos");document.addEventListener("mousemove",function(t){window.innerWidth,window.innerHeight;positionButton(t.pageX,t.pageY)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsicG9zaXRpb25CdXR0b24iLCJtb3VzZVgiLCJtb3VzZVkiLCJ4UG9zIiwiaW5uZXJIVE1MIiwieVBvcyIsInd3Iiwid2luZG93IiwiaW5uZXJXaWR0aCIsIndoIiwiaW5uZXJIZWlnaHQiLCJ0IiwiYnV0dG9uIiwib2Zmc2V0VG9wIiwiciIsIm9mZnNldExlZnQiLCJvZmZzZXRXaWR0aCIsImIiLCJvZmZzZXRIZWlnaHQiLCJsIiwieGMiLCJ5YyIsImR4IiwiZHkiLCJjb25zb2xlIiwibG9nIiwicHJveGltaXR5IiwibWFyZ2luIiwiYnV0dG9uV2lkdGgiLCJuZXdYIiwibmV3WSIsInN0eWxlIiwidHJhbnNmb3JtIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiYnV0dG9uSGVpZ2h0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJwYWdlWCIsInBhZ2VZIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQVdBLFFBQUFBLGdCQUFBQyxFQUFBQyxHQUNBQyxLQUFBQyxVQUFBLE1BQUFILEVBQ0FJLEtBQUFELFVBQUEsTUFBQUYsQ0FFQSxJQUFBSSxHQUFBQyxPQUFBQyxXQUNBQyxFQUFBRixPQUFBRyxZQUVBQyxFQUFBQyxPQUFBQyxVQUNBQyxFQUFBRixPQUFBRyxXQUFBSCxPQUFBSSxZQUNBQyxFQUFBTCxPQUFBQyxVQUFBRCxPQUFBTSxhQUNBQyxFQUFBUCxPQUFBRyxXQUNBSyxFQUFBUixPQUFBRyxXQUFBSCxPQUFBSSxZQUFBLEVBQ0FLLEVBQUFULE9BQUFDLFVBQUFELE9BQUFNLGFBQUEsRUFFQUksRUFBQSxFQUNBQyxFQUFBLENBQ0FDLFNBQUFDLElBQUFMLEVBQUFDLElBR0FwQixFQUFBa0IsRUFBQU8sV0FBQXpCLEVBQUFhLEVBQUFZLGFBRUF4QixFQUFBUyxFQUFBZSxXQUFBeEIsRUFBQWUsRUFBQVMsYUFFQXpCLEVBQUEwQixPQUFBUixHQUFBbEIsRUFBQW1CLElBQ0FFLEVBQUFyQixHQUFBSyxFQUFBLEVBQUFzQixZQUFBLEdBQUFELFFBRUExQixFQUFBMEIsT0FBQWIsR0FBQWIsRUFBQW1CLElBQ0FFLEVBQUFyQixHQUFBSyxFQUFBLEVBQUFzQixZQUFBLEdBQUFELFFBR0F6QixFQUFBeUIsT0FBQWhCLEdBQUFULEVBQUFtQixJQUNBRSxFQUFBckIsR0FBQU8sRUFBQSxFQUFBbUIsWUFBQSxHQUFBRCxRQUVBekIsRUFBQXlCLE9BQUFWLEdBQUFmLEVBQUFtQixJQUNBRSxFQUFBckIsR0FBQU8sRUFBQSxFQUFBbUIsWUFBQSxHQUFBRCxRQU9BLElBQUFFLEdBQUFQLEVBQ0FRLEVBQUFQLENBRUFYLFFBQUFtQixNQUFBQyxVQUFBLGFBQUFILEVBQUEsT0FBQUMsRUFBQSxNQXREQSxHQUFBSCxRQUFBLEdBQ0FELFVBQUEsR0FFQWQsT0FBQXFCLFNBQUFDLGNBQUEsV0FDQU4sWUFBQWhCLE9BQUFJLFlBQ0FtQixhQUFBdkIsT0FBQU0sYUFFQWYsS0FBQThCLFNBQUFDLGNBQUEsU0FDQTdCLEtBQUE0QixTQUFBQyxjQUFBLFFBbURBRCxVQUFBRyxpQkFBQSxZQUFBLFNBQUFDLEdBQ0E5QixPQUFBQyxXQUNBRCxPQUFBRyxXQUVBVixnQkFBQXFDLEVBQUFDLE1BQUFELEVBQUFFIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgbWFyZ2luID0gNTA7XG52YXIgcHJveGltaXR5ID0gNzU7XG5cbnZhciBidXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmJ1dHRvblwiKTtcbnZhciBidXR0b25XaWR0aCA9IGJ1dHRvbi5vZmZzZXRXaWR0aDtcbnZhciBidXR0b25IZWlnaHQgPSBidXR0b24ub2Zmc2V0SGVpZ2h0O1xuXG52YXIgeFBvcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjeHBvc1wiKTtcbnZhciB5UG9zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN5cG9zXCIpO1xuXG5mdW5jdGlvbiBwb3NpdGlvbkJ1dHRvbihtb3VzZVgsIG1vdXNlWSkge1xuICB4UG9zLmlubmVySFRNTCA9ICdYOiAnICsgbW91c2VYO1xuICB5UG9zLmlubmVySFRNTCA9ICdZOiAnICsgbW91c2VZO1xuXG4gIHZhciB3dyA9IHdpbmRvdy5pbm5lcldpZHRoO1xuICB2YXIgd2ggPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG5cbiAgdmFyIHQgPSBidXR0b24ub2Zmc2V0VG9wO1xuICB2YXIgciA9IGJ1dHRvbi5vZmZzZXRMZWZ0ICsgYnV0dG9uLm9mZnNldFdpZHRoO1xuICB2YXIgYiA9IGJ1dHRvbi5vZmZzZXRUb3AgKyBidXR0b24ub2Zmc2V0SGVpZ2h0O1xuICB2YXIgbCA9IGJ1dHRvbi5vZmZzZXRMZWZ0O1xuICB2YXIgeGMgPSBidXR0b24ub2Zmc2V0TGVmdCArIChidXR0b24ub2Zmc2V0V2lkdGggLyAyKTtcbiAgdmFyIHljID0gYnV0dG9uLm9mZnNldFRvcCArIChidXR0b24ub2Zmc2V0SGVpZ2h0IC8gMik7XG5cbiAgdmFyIGR4ID0gMDtcbiAgdmFyIGR5ID0gMDtcbiAgY29uc29sZS5sb2coeGMsIHljKTtcblxuICAvLyBpZiB0aGUgbW91c2UgaXMgd2l0aGluIDIwMCBwaXhlbHMgb2YgdGhlIG91dGVyd2lkdGhcbiAgaWYgKG1vdXNlWCA+IGwgLSBwcm94aW1pdHkgfHwgbW91c2VYIDwgciArIHByb3hpbWl0eSkge1xuICAgIC8vIGlmIHRoZSBtb3VzZSBpcyB3aXRoaW4gMjAwIHBpeGVscyBvZiB0aGUgb3V0ZXIgaGVpZ2h0XG4gICAgaWYgKG1vdXNlWSA8IHQgLSBwcm94aW1pdHkgfHwgbW91c2VZIDwgYiArIHByb3hpbWl0eSkge1xuXG4gICAgICBpZiAobW91c2VYICsgbWFyZ2luID4gbCAmJiBtb3VzZVggPCB4Yykge1xuICAgICAgICBkeCA9IG1vdXNlWCAtICgod3cvMikgLSAoYnV0dG9uV2lkdGggLyAyKSkgKyBtYXJnaW47XG4gICAgICB9XG4gICAgICBpZiAobW91c2VYIC0gbWFyZ2luIDwgciAmJiBtb3VzZVggPiB4Yykge1xuICAgICAgICBkeCA9IG1vdXNlWCAtICgod3cvMikgKyAoYnV0dG9uV2lkdGggLyAyKSkgLSBtYXJnaW47XG4gICAgICB9XG5cbiAgICAgIGlmIChtb3VzZVkgKyBtYXJnaW4gPiB0ICYmIG1vdXNlWSA8IHljKSB7XG4gICAgICAgIGR5ID0gbW91c2VZIC0gKCh3aC8yKSAtIChidXR0b25XaWR0aCAvIDIpKSArIG1hcmdpbjtcbiAgICAgIH1cbiAgICAgIGlmIChtb3VzZVkgLSBtYXJnaW4gPCBiICYmIG1vdXNlWSA+IHljKSB7XG4gICAgICAgIGR5ID0gbW91c2VZIC0gKCh3aC8yKSArIChidXR0b25XaWR0aCAvIDIpKSAtIG1hcmdpbjtcbiAgICAgIH1cblxuICAgIH1cbiAgfVxuXG5cbiAgdmFyIG5ld1ggPSBkeDtcbiAgdmFyIG5ld1kgPSBkeTtcblxuICBidXR0b24uc3R5bGUudHJhbnNmb3JtID0gXCJ0cmFuc2xhdGUoXCIrbmV3WCtcInB4LCBcIituZXdZK1wicHgpXCI7XG4gIC8vIGJ1dHRvbi5zdHlsZS50cmFuc2Zvcm0gPSBcInRyYW5zbGF0ZVgoXCIrbmV3WCtcInB4KVwiO1xufVxuXG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgZnVuY3Rpb24oZSkge1xuICB2YXIgd3cgPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgdmFyIHdoID0gd2luZG93LmlubmVySGVpZ2h0O1xuXG4gIHBvc2l0aW9uQnV0dG9uKGUucGFnZVgsIGUucGFnZVkpO1xuICAvLyB2YXIgeG1hcHBlZCA9IHNjYWxlKGUucGFnZVgsIDAsIHd3LCAtMTAwLCAxMDApO1xuICAvLyB2YXIgeW1hcHBlZCA9IHNjYWxlKGUucGFnZVksIDAsIHdoLCAxMDAsIC0xMDApO1xuXG5cbn0pXG5cbi8vIGNvbnNvbGUubG9nKGJ1dHRvbi5vZmZzZXRUb3ApO1xuIl19
